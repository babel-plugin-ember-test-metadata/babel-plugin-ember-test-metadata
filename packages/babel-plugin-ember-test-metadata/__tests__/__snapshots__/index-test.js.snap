// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`addMetadata Embroider build path: Embroider build path 1`] = `

import { module, test } from 'qunit';
import { click, getTestMetadata } from '@ember/test-helpers';

module('Acceptance | example test embroider prefix', function (hooks) {
  hooks.beforeEach(function () {
    // noop
  });

  test('example', async function (assert) {
    click();
    assert(true);
  });
});

      ↓ ↓ ↓ ↓ ↓ ↓

import { module, test } from 'qunit';
import { click, getTestMetadata } from '@ember/test-helpers';
module('Acceptance | example test embroider prefix', function (hooks) {
  hooks.beforeEach(function () {
    let testMetadata = getTestMetadata(QUnit.config.current.testEnvironment);
    testMetadata.filePath = 'pathtest/embroider-prefix-test.js';
  });
  hooks.beforeEach(function () {
    // noop
  });
  test('example', async function (assert) {
    click();
    assert(true);
  });
});


`;

exports[`addMetadata for a module with hooks it adds getTestMetadata: for a module with hooks it adds getTestMetadata 1`] = `

import {module, test} from 'qunit';
import { click } from '@ember/test-helpers';

module('Acceptance | example test', function (hooks) {
  hooks.beforeEach(function () {
    // noop
  });

  test('example', async function (assert) {
    click();
    assert(true)
  });
});

      ↓ ↓ ↓ ↓ ↓ ↓

import { getTestMetadata } from '@ember/test-helpers';
import { module, test } from 'qunit';
import { click } from '@ember/test-helpers';
module('Acceptance | example test', function (hooks) {
  hooks.beforeEach(function () {
    let testMetadata = getTestMetadata(QUnit.config.current.testEnvironment);
    testMetadata.filePath = '__tests__/__fixtures__/with-hooks-test.js';
  });
  hooks.beforeEach(function () {
    // noop
  });
  test('example', async function (assert) {
    click();
    assert(true);
  });
});


`;

exports[`addMetadata for a module with no hooks it adds test metadata: for a module with no hooks it adds test metadata 1`] = `

import {module, test} from 'qunit';
import { click } from '@ember/test-helpers';

module('Acceptance | example test', function () {
  hooks.beforeEach(function () {
    // noop
  });

  test('example', async function (assert) {
    click();
    assert(true)
  });
});

      ↓ ↓ ↓ ↓ ↓ ↓

import { getTestMetadata } from '@ember/test-helpers';
import { module, test } from 'qunit';
import { click } from '@ember/test-helpers';
module('Acceptance | example test', function (hooks) {
  hooks.beforeEach(function () {
    let testMetadata = getTestMetadata(QUnit.config.current.testEnvironment);
    testMetadata.filePath = '__tests__/__fixtures__/without-hooks-test.js';
  });
  hooks.beforeEach(function () {
    // noop
  });
  test('example', async function (assert) {
    click();
    assert(true);
  });
});


`;

exports[`addMetadata with existing metadata import it reuses the import: with existing metadata import it reuses the import 1`] = `

import {module, test} from 'qunit';
import { click, getTestMetadata } from '@ember/test-helpers';

module('Acceptance | example test', function (hooks) {
  hooks.beforeEach(function () {
    // noop
  });

  test('example', async function (assert) {
    click();
    assert(true)
  });
});

      ↓ ↓ ↓ ↓ ↓ ↓

import { module, test } from 'qunit';
import { click, getTestMetadata } from '@ember/test-helpers';
module('Acceptance | example test', function (hooks) {
  hooks.beforeEach(function () {
    let testMetadata = getTestMetadata(QUnit.config.current.testEnvironment);
    testMetadata.filePath = '__tests__/__fixtures__/with-get-test-metadata-test.js';
  });
  hooks.beforeEach(function () {
    // noop
  });
  test('example', async function (assert) {
    click();
    assert(true);
  });
});


`;

exports[`addMetadata with multiple sibling modules: with multiple sibling modules 1`] = `

import {module, test} from 'qunit';
import { click } from '@ember/test-helpers';

module('Acceptance | example test', function (hooks) {
  hooks.beforeEach(function () {
    // noop
  });

  test('example', async function (assert) {
    click();
    assert(true)
  });
});

module('Acceptance | example test 2', function (hooks) {
  hooks.beforeEach(function () {
    // noop
  });

  test('example', async function (assert) {
    click();
    assert(true)
  });
});

      ↓ ↓ ↓ ↓ ↓ ↓

import { getTestMetadata } from '@ember/test-helpers';
import { module, test } from 'qunit';
import { click } from '@ember/test-helpers';
module('Acceptance | example test', function (hooks) {
  hooks.beforeEach(function () {
    let testMetadata = getTestMetadata(QUnit.config.current.testEnvironment);
    testMetadata.filePath = '__tests__/__fixtures__/with-multiple-modules-test.js';
  });
  hooks.beforeEach(function () {
    // noop
  });
  test('example', async function (assert) {
    click();
    assert(true);
  });
});
module('Acceptance | example test 2', function (hooks) {
  hooks.beforeEach(function () {
    let testMetadata = getTestMetadata(QUnit.config.current.testEnvironment);
    testMetadata.filePath = '__tests__/__fixtures__/with-multiple-modules-test.js';
  });
  hooks.beforeEach(function () {
    // noop
  });
  test('example', async function (assert) {
    click();
    assert(true);
  });
});


`;

exports[`addMetadata with no module callback it does not add a beforeEach: with no module callback it does not add a beforeEach 1`] = `

import {module} from 'qunit';

module('Acceptance | example test no module');

      ↓ ↓ ↓ ↓ ↓ ↓

import { getTestMetadata } from '@ember/test-helpers';
import { module } from 'qunit';
module('Acceptance | example test no module');


`;
